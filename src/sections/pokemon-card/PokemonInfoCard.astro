---
import { PokemonCardDataMain } from "@/components/pokemon-card-data/PokemonCardDataMain"
import "atropos/css"
import { Badge } from "@/components/ui-shadcn/badge"
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader
} from "@/components/ui-shadcn/card"
import { Image } from "astro:assets"
import NotFoundImage from "@/assets/not-found-card.jpg"
import type { PokemonCardResponse } from "@/types/pokemon-card-response"
import { ArrowBigRight } from "lucide-react"

interface Props {
  pokemon: PokemonCardResponse["data"]
  isTrainerCard: boolean
  badgeVariant: string
}

const { pokemon, isTrainerCard, badgeVariant } = Astro.props
---

<section
  class="mx-auto grid min-h-screen max-w-7xl grid-cols-1 justify-center gap-6 p-5 sm:p-0 md:grid-cols-2"
>
  <article
    class="sticky top-10 flex flex-col items-center self-start overflow-y-auto pt-10"
  >
    <Card className="w-full">
      <CardHeader className="flex items-center justify-between gap-2">
        <h2 class="font-title text-2xl font-bold">{pokemon.name}</h2>
        {
          !isTrainerCard && (
            <span class="font-medium text-green-500">{pokemon.hp} HP</span>
          )
        }
      </CardHeader>

      <!-- Card Image -->
      <CardContent className="atropos my-atropos mx-auto w-[400px] p-5">
        <div class="atropos-scale">
          <div class="atropos-rotate">
            <div class="atropos-inner">
              <Image
                src={pokemon.images.large ?? NotFoundImage}
                alt={pokemon.name}
                width={200}
                height={300}
                loading="lazy"
                class="mx-auto h-auto w-[400px] rounded-lg shadow-lg"
              />
            </div>
          </div>
        </div>
      </CardContent>

      <CardFooter className="flex items-center justify-between gap-2">
        <div class="flex gap-2">
          <Badge className="bg-black-ivory text-white">
            {pokemon.supertype}
          </Badge>

          <Badge className="bg-black-ivory text-white">
            {pokemon.subtypes ? pokemon.subtypes.join(", ") : "N/A"}
          </Badge>
        </div>

        <div class="flex gap-2">
          <p class="text-xs capitalize">
            <span class="font-semibold">Expansión:</span>
            {pokemon.set.name}
          </p>

          <span class="text-xs capitalize"
            >{pokemon.number}/{pokemon.set.printedTotal}</span
          >
        </div>
      </CardFooter>
    </Card>

    <div class="mt-5 flex items-center justify-center gap-2">
      {
        pokemon.evolvesFrom && (
          <>
            <span>Evolución de</span>
            <Badge variant="black">{pokemon.evolvesFrom}</Badge>
            <ArrowBigRight className="h-4 w-4" />
          </>
        )
      }

      {
        (pokemon.evolvesFrom || pokemon.evolvesTo) && (
          <>
            <Badge variant={isTrainerCard ? (badgeVariant as any) : "default"}>
              {pokemon.name}
            </Badge>
          </>
        )
      }

      {
        pokemon.evolvesTo && (
          <>
            <span>Que evoluciona a</span>
            <ArrowBigRight className="h-4 w-4" />
            <Badge variant="black">{pokemon.evolvesTo}</Badge>
          </>
        )
      }
    </div>
  </article>

  <PokemonCardDataMain
    pokemon={pokemon}
    isTrainerCard={isTrainerCard}
    client:load
  />
</section>

<script>
  import Atropos from "atropos"

  document.addEventListener("astro:page-load", () => {
    Atropos({
      el: ".my-atropos"
    })
  })
</script>
