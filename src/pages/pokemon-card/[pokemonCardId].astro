---
import type { PokemonCardResponse } from "@/types/pokemon-card-response"
import { Image } from "astro:assets"
import NotFoundImage from "@/assets/not-found-card.jpg"
import Layout from "@/layouts/Layout.astro"
import { PokemonCardDataMain } from "@/components/pokemon-card-data/PokemonCardDataMain"
import "atropos/css"
import { Badge } from "@/components/ui-shadcn/badge"

export const prerender = false

const { pokemonCardId } = Astro.params

const data = await fetch(`https://api.pokemontcg.io/v2/cards/${pokemonCardId}`)
const { data: pokemon } = (await data.json()) as PokemonCardResponse

console.log(pokemon)
const isTrainerCard = pokemon.supertype === "Trainer"

const badgeVariant = pokemon.types?.at(0)?.toLocaleLowerCase() ?? "default"
---

<Layout>
  <section
    class="mx-auto grid max-w-7xl grid-cols-1 justify-center gap-8 p-5 sm:p-0 md:grid-cols-2"
  >
    <article>
      <div
        class="relative w-full rounded-lg bg-white py-20 shadow-lg backdrop:backdrop-blur-2xl"
      >
        <section class="absolute top-7 left-7 flex gap-2">
          <h2 class="font-title text-2xl font-bold">{pokemon.name}</h2>
          {
            !isTrainerCard && (
              <span class="font-medium text-green-500">{pokemon.hp} HP</span>
            )
          }
        </section>

        <!-- Card Image -->
        <section class="atropos my-atropos mx-auto w-[400px]">
          <div class="atropos-scale">
            <div class="atropos-rotate">
              <div class="atropos-inner">
                <Image
                  src={pokemon.images.large ?? NotFoundImage}
                  alt={pokemon.name}
                  width={200}
                  height={300}
                  loading="lazy"
                  class="mx-auto h-auto w-[400px] rounded-lg shadow-lg"
                />
              </div>
            </div>
          </div>
        </section>

        <section>
          <div class="absolute bottom-7 left-7 flex gap-2">
            <Badge className="bg-black-ivory text-white">
              {pokemon.supertype}
            </Badge>

            <Badge className="bg-black-ivory text-white">
              {pokemon.subtypes.join(" - ")}
            </Badge>
          </div>

          <div class="absolute right-7 bottom-7 flex gap-2">
            <span class="text-xs capitalize">Expansión: {pokemon.set.name}</span
            >
            <span class="text-xs capitalize"
              >{pokemon.number}/{pokemon.set.printedTotal}</span
            >
          </div>
        </section>
      </div>

      <div class="mt-5 flex items-center justify-center gap-2">
        {
          pokemon.evolvesFrom && (
            <>
              <span>Evolución de</span>
              <Badge variant="black">{pokemon.evolvesFrom}</Badge>
              <span>{"=>"}</span>
            </>
          )
        }

        {
          (pokemon.evolvesFrom || pokemon.evolvesTo) && (
            <>
              <Badge
                variant={isTrainerCard ? (badgeVariant as any) : "default"}
              >
                {pokemon.name}
              </Badge>
            </>
          )
        }

        {
          pokemon.evolvesTo && (
            <>
              <span>Que evoluciona a</span>
              <span> => </span>
              <Badge variant="black">{pokemon.evolvesTo}</Badge>
            </>
          )
        }
      </div>
    </article>

    <PokemonCardDataMain
      pokemon={pokemon}
      isTrainerCard={isTrainerCard}
      client:load
    />
  </section>
</Layout>

<script>
  import Atropos from "atropos"

  document.addEventListener("astro:page-load", () => {
    Atropos({
      el: ".my-atropos"
    })
  })
</script>
